#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# 🚀 Sovren Pre-Commit Quality Gates
# Maintaining 91.58% test coverage & zero violations

echo "🔍 Running pre-commit quality gates..."

# 1. Run lint-staged for code formatting and linting
echo "📝 Checking code formatting and linting..."
npx lint-staged

# 2. Type checking
echo "🔧 Running TypeScript type checking..."
npm run type-check
if [ $? -ne 0 ]; then
  echo "❌ Type checking failed! Please fix TypeScript errors before committing."
  exit 1
fi

# 3. Run all tests to ensure nothing breaks
echo "🧪 Running full test suite..."
npm run test:ci
if [ $? -ne 0 ]; then
  echo "❌ Tests failed! All tests must pass before committing."
  exit 1
fi

# 4. Check test coverage threshold (>90%)
echo "📊 Checking test coverage threshold..."
cd packages/frontend
npm run test:coverage -- --passWithNoTests --silent | tail -n 20 > /tmp/coverage-output.txt
coverage_lines=$(grep "Lines" /tmp/coverage-output.txt | grep -o '[0-9]\+\.[0-9]\+%' | head -1 | sed 's/%//')
if [ -n "$coverage_lines" ]; then
  coverage_int=$(echo "$coverage_lines" | cut -d'.' -f1)
  if [ "$coverage_int" -lt 90 ]; then
    echo "❌ Test coverage ($coverage_lines%) is below 90% threshold!"
    echo "📋 Please add tests to maintain our elite coverage standards."
    exit 1
  else
    echo "✅ Test coverage: $coverage_lines% (exceeds 90% threshold)"
  fi
else
  echo "⚠️  Could not determine coverage - proceeding with caution"
fi
cd ../..

# 5. Security audit
echo "🔒 Running security audit..."
npm audit --audit-level=moderate
if [ $? -ne 0 ]; then
  echo "❌ Security vulnerabilities detected! Please resolve before committing."
  exit 1
fi

# 6. Build verification
echo "🏗️  Verifying production build..."
npm run build
if [ $? -ne 0 ]; then
  echo "❌ Production build failed! Please fix build errors before committing."
  exit 1
fi

echo "✅ All quality gates passed! Ready to commit."
echo "🎉 Maintaining elite standards: 91.58% coverage, zero violations"
